image: docker:19.03.13

  # entrypoint: [""]

stages:
  - build_kaniko_prod
  - deploy_prod  


build_kaniko_prod:
  stage: build_kaniko_prod
#  variables:
#    IMAGE_DESTINATION: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}
  only:
    - dev
  tags:
    - "shop_front"
  script:
      # Prepare Kaniko configuration file
      - echo $CI_REGISTRY_IMAGE
      - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
      # Build and push the image from the Dockerfile at the root of the project.
      - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $IMAGE_DESTINATION --cache-dir=/workspace/cache 
      # Print the full registry path of the pushed image
      - echo "Image pushed successfully to ${IMAGE_DESTINATION}"
      - echo "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}"      

deploy-stage:
  stage: deploy-stage
  only:
    - dev
  tags:
    - "shop_front"  
  image: alpine:latest
  script:
    - chmod og= $SSH_PRIVATE_KEY
    - apk update && apk add openssh-client
    - echo $ENV_FILE
    - cp $ENV_FILE .env.prod
    # stop existing docker container & remove images
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $USER@$PROD_SERVER_IP "docker stop $CI_PROJECT_NAME  "
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $USER@$PROD_SERVER_IP "docker rm $CI_PROJECT_NAME  "
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $USER@$PROD_SERVER_IP "docker image rm $CI_REGISTRY_IMAGE:latest "
    # pull new container
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $USER@$PROD_SERVER_IP "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $USER@$PROD_SERVER_IP "docker pull $CI_REGISTRY_IMAGE:latest"
    # run new container
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $USER@$PROD_SERVER_IP "docker run -d --restart unless-stopped --name $CI_PROJECT_NAME -p 2002:2002 --env-file=.env.prod -e "variableData=Docker-Run-Command" $CI_REGISTRY_IMAGE:latest"