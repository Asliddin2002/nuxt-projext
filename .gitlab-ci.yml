# image: alpine:latest
image: docker:19.03.12
services:
  - docker:19.03.12-dind

#services:
#  - alpine:latest-dind
stages:          # List of stages for jobs, and their order of execution
  - build-kaniko
  - test
  - release
  - deploy

variables:
  CONTAINER_SHOP_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
  ROCM_REGISTRY_IMAGE: 'MYIMAGENAME_WITH_URL'
  ROCM_PROJECT_DIR: .
#  KANIKO_DIR: "/kaniko/.docker"

build-with-kaniko:
  stage: build-kaniko       # This job runs in the build stage, which runs first.
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  tags: 
    - shop_front    
  script:
   # - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"
    - echo "Image pushed successfully to ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"
    - echo "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"

test:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  image: docker:19.03.12
  tags: 
    - shop_front
  services:
    - docker:19.03.12-dind

  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG 
    - docker run ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG} npm test

deploy:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  tags: 
    - shop_front
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest 
    - docker run -d -p 2000:2000 $CI_REGISTRY_IMAGE:latest 
    - echo "Ishladi"